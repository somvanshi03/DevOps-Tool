#To create a shell script that monitors the Apache thread count and restarts the Apache service if the thread count exceeds 500, follow these steps:

### Script: monitor_apache_threads.sh

#!/bin/bash

# Configuration
APACHE_PROCESS_NAME="apache2"  # Use "httpd" for CentOS/RHEL
LOG_FILE="/var/log/monitor_apache_threads.log"
RESTART_COMMAND="sudo systemctl restart apache2"  # Use "sudo systemctl restart httpd" for CentOS/RHEL
THREAD_THRESHOLD=500

# Function to log messages
log_message() {
    local message="$1"
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $message" | tee -a $LOG_FILE
}

# Function to get the Apache thread count
get_apache_thread_count() {
    pgrep $APACHE_PROCESS_NAME | xargs ps -o nlwp= -p | awk '{ sum += $1 } END { print sum }'
}

# Function to restart Apache
restart_apache() {
    log_message "Apache thread count exceeded threshold. Attempting to restart..."
    $RESTART_COMMAND
    if [ $? -eq 0 ]; then
        log_message "Apache successfully restarted."
    else
        log_message "Failed to restart Apache."
    fi
}

# Main monitoring loop
while true; do
    THREAD_COUNT=$(get_apache_thread_count)
    log_message "Current Apache thread count: $THREAD_COUNT"
    if [ "$THREAD_COUNT" -gt "$THREAD_THRESHOLD" ]; then
        restart_apache
    fi
    sleep 60  # Check every 60 seconds
done


### Explanation

1. *Configuration:*
   - APACHE_PROCESS_NAME is set to apache2 for Debian/Ubuntu systems. Change it to httpd for CentOS/RHEL systems.
   - LOG_FILE specifies where to log the monitoring activities.
   - RESTART_COMMAND is the command used to restart Apache. Adjust it according to your system's service management command.
   - THREAD_THRESHOLD is the maximum number of threads allowed before restarting Apache.

2. *Functions:*
   - log_message(): Logs messages with a timestamp to both the terminal and the log file.
   - get_apache_thread_count(): Calculates the total number of threads used by Apache processes.
   - restart_apache(): Attempts to restart Apache and logs the outcome.

3. *Main Monitoring Loop:*
   - The loop continuously checks the Apache thread count.
   - If the thread count exceeds the threshold, it attempts to restart Apache.
   - Logs the current thread count every 60 seconds.

### Usage

1. Save the script to a file, for example, monitor_apache_threads.sh.
2. Make the script executable:
   bash
   chmod +x monitor_apache_threads.sh
   
3. Run the script:
   bash
   ./monitor_apache_threads.sh
   
4. To run the script in the background and ensure it keeps running, you can use nohup or a similar tool:
   bash
   nohup ./monitor_apache_threads.sh &
   

### Notes

- Ensure the script has the necessary permissions to execute the restart command (sudo might require a password unless configured with passwordless sudo for the systemctl restart command).
- Adjust the log file path and restart command as needed for your system and environment.
- You may want to set up this script to run at system startup, which can be done by adding it to your system's init system (e.g., systemd, init.d).